bind "set completion-ignore-case on"

PROMPT_SECTION_SEP="${COLOR_WHITE} • ${COLOR_NONE}"
history_prompt="${COLOR_RED}\\$\!${COLOR_NONE}${PROMPT_SECTION_SEP}"
user_host_prompt="${PROMPT_SECTION_SEP}${COLOR_GREEN}\u@\h${COLOR_NONE}${PROMPT_SECTION_SEP}${COLOR_PURPLE}\w${COLOR_NONE}"

show_time() {
  printf "${COLOR_LIGHT_BLUE}$(date +%H.%M)${COLOR_NONE}"
}

export PROMPT_COMMAND="store_exit_status"
store_exit_status() {
  LAST_EXIT_STATUS=$?
}

show_exit_status() {
  if [ "x${LAST_EXIT_STATUS}" != "x0" ]; then
    printf "${PROMPT_SECTION_SEP}${COLOR_LIGHT_RED}[${LAST_EXIT_STATUS}]${COLOR_NONE}"
  fi
}

show_git_branch_and_status() {
  local gitdir
  gitdir=$(__gitdir)
  if [[ -n "${gitdir}" ]]; then
    if [ $(within_dotgit) == "0" ]; then
      local branch_prompt
      branch_prompt=$(__git_ps1 "${COLOR_RED}{${COLOR_NONE}${COLOR_BLUE}%s${COLOR_NONE}${COLOR_RED}}${COLOR_NONE}")
      if [[ -n "$branch_prompt" ]]; then
        printf "${PROMPT_SECTION_SEP}${branch_prompt}"
      fi
    fi
  fi
}

within_dotgit() {
  echo `expr //$PWD : '.*/\.git'`
}

show_git_status() {
  local gitdir
  gitdir=$(__gitdir)
  if [[ -n "${gitdir}" ]]; then
    if [ $(within_dotgit) == "0" ]; then
      local current_git_status
      if current_git_status=$(git status | grep 'added to commit' 2> /dev/null); then
        printf "${COLOR_RED}\r\n➜ "
        return
      fi
    fi
  fi
  printf "${COLOR_GREEN}\r\n➜ "
}



export PS1="${COLOR_NONE}${history_prompt}"'$(show_time)'"${user_host_prompt}"'$(show_git_branch_and_status)$(show_exit_status)$(show_git_status)\[${COLOR_NONE}\]\[\e[1;37m\]'