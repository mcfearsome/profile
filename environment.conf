bind "set completion-ignore-case on"

show_time() {
  printf "${COLOR_BLUE}$(date +%H.%M)${COLOR_NONE}"
}



# export PROMPT_COMMAND='autojump -a $(pwd) && store_exit_status'
# function j { cd "$(autojump $1)"; }
export PROMPT_COMMAND="store_exit_status"
# prompt_section_sep=$'\e[30m'"-${COLOR_NONE}"
prompt_section_sep=$'\e[1;37m'" • ${COLOR_NONE}"
store_exit_status() {
  LAST_EXIT_STATUS=$?
}

show_exit_status() {
  if [ "x${LAST_EXIT_STATUS}" != "x0" ]; then
    echo "${prompt_section_sep}""${COLOR_RED}[${LAST_EXIT_STATUS}]${COLOR_NONE}"
  fi
}

show_git_branch_and_status() {
  local git_dir
  local find_gitdir
  git_dir=$(__gitdir)
  find_gitdir=`expr "$git_dir" : '.*\.git$'`
  if [[ "$find_gitdir" == "0" ]]; then
    return
  fi
  local branch_prompt
  branch_prompt=$(__git_ps1 "${COLOR_RED}{${COLOR_NONE}""${COLOR_BLUE}%s${COLOR_NONE}""${COLOR_RED}}${COLOR_NONE}")
  if [[ -n "$branch_prompt" ]]; then
    echo $'\e[1;37m'" • ${COLOR_NONE}""$branch_prompt"
  fi
}

show_git_status() {
  local git_dir
  local find_gitdir
  git_dir=$(__gitdir)
  find_gitdir=`expr "$git_dir" : '.*\.git$'`
  if [[ "$find_gitdir" == "0" ]]; then
    # printf "${COLOR_GREEN}\r\n➩ "
    printf "${COLOR_GREEN}\r\n➜ "
    return
  fi
  local current_git_status
  if current_git_status=$(git status | grep 'added to commit' 2> /dev/null); then
    printf "${COLOR_RED}\r\n➜ "
  else
    # printf "${COLOR_GREEN}\r\n➩ "
    printf "${COLOR_GREEN}\r\n➜ "
  fi
}
history_prompt="${COLOR_RED}\\$\!${COLOR_NONE}""${prompt_section_sep}"
user_host_prompt="${prompt_section_sep}""${COLOR_GREEN}\u@\h${COLOR_NONE}""${prompt_section_sep}""${COLOR_PURPLE}\w${COLOR_NONE}"
export PS1="${COLOR_NONE}${history_prompt}"'$(show_time)'"${user_host_prompt}"'$(show_git_branch_and_status)$(show_exit_status)$(show_git_status)\[${COLOR_NONE}\]\[\e[1;37m\]'

# shopt -s globstar autocd



